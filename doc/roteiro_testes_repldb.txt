# ---------------------------------------------------------

# Roteiro de testes ReplDB
# Premissas:
# 1 - Iniciar e se conectar a VM master
vboxmanage startvm "srv-fb3-master" --type headless
ssh sysadmin@192.168.1.53 -p 11122

# ---------------------------------------------------------

# 2 - Iniciar e se conecta a VM slave 
vboxmanage startvm "srv-fb3-repl01" --type headless
ssh sysadmin@192.168.1.54 -p 11122

# ---------------------------------------------------------

# 3 - Limpar VMs (removendo todos componentes do ReplDB)
cd repldb
sudo ./bin/repldb --rmeove-replica --id <id>
make clean
cd ..
sudo rm -rf repldb
ls -lrta
ls -lrta /opt/firebird/data

sudo /opt/firebird/bin/isql
CONNECT '/opt/firebird/data/players_replica01.fdb' USER 'sysdba' PASSWORD 'repl@gis123';
DROP DATABASE;

# Reptir passos para os bancos existentes, inclusive o repldb.fdb
QUIT;

ls -lrta /opt/firebird/data

# ---------------------------------------------------------

# 4 - Copiar HELP para consultas:
sudo ./bin/repldb --help
#    Uso:
#        repldb --init-db
#        repldb --add-replica --fonte <path> --destino <path> [--schedule "<cron>"]
#        repldb --remove-replica --id <id>
#        repldb --list-replica
#        repldb --run-replica --id <id>
#        repldb --run-replica --all
#        repldb --list-logs [--id <id>]
#        repldb --help

# ---------------------------------------------------------

# Objetivo: Testar o ReplDB

# ---------------------------------------------------------

# Roteiro de testes:

# 1 - Baixar, instalar e iniciar o banco de dados de replicação (lembre-se dos ajustes de permissão).
git clone https://github.com/gismarb/repldb.git
ls
cd repldb
make clean all
clear && ls -lrta
sudo ./bin/repldb --init-db
ls -lrta /opt/firebird/data
sudo chown firebird:firebird /opt/firebird/data/repldb.fdb
ls -lrta /opt/firebird/data

# ---------------------------------------------------------

# 2 - Criar um banco de testes (master) e popular com dados iniciais.
sudo /opt/firebird/bin/isql
CREATE DATABASE '/opt/firebird/data/bd_master_mini_erp.fdb' USER 'sysdba' PASSWORD 'repl@gis123';

ls -lrta /opt/firebird/data
sudo chown firebird:firebird /opt/firebird/data/bd_master_mini_erp.fdb
ls -lrta /opt/firebird/data

-- Criação da tabela pode ser feita dentro do DBeaver (necessário criar a conexão)
CREATE TABLE tbl_produtos (
    id_produto INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    desc_produto VARCHAR(100) NOT NULL,
    tipo_produto VARCHAR(50),
    cor_produto VARCHAR(50),
    un_produto CHAR(2)
);

-- Check constraints para valores permitidos
ALTER TABLE tbl_produtos ADD CONSTRAINT chk_tipo_produto 
CHECK (UPPER(tipo_produto) IN ('PAINEL', 'EIXO', 'ROLAMENTO', 'TERMINAL', 'COMPONENTE'));

ALTER TABLE tbl_produtos ADD CONSTRAINT chk_cor_produto 
CHECK (UPPER(cor_produto) IN ('PRETO', 'CINZA', 'PRATA', 'DOURADO'));

ALTER TABLE tbl_produtos ADD CONSTRAINT chk_un_produto 
CHECK (UPPER(un_produto) IN ('KG', 'MT', 'UN'));

-- Inserindo dados primários
INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('PAINEL FRONTAL OPOSTO SSG-HL', 'PAINEL', 'PRATA', 'UN');

INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('SINGULAR MEDIANO REDIAL SSH-GG', 'EIXO', 'PRETO', 'UN');

INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('PARALELO OPOSTO CURVADO SSG-HL', 'TERMINAL', 'DOURADO', 'UN');

INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('BARRA DIMENSIONADA', 'COMPONENTE', 'CINZA', 'KG');

INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('CHAPA LAMINADA HHS', 'COMPONENTE', 'CINZA', 'MT');

# ---------------------------------------------------------

# 3- Criar 2 planos de replicação de dados, sendo que 1 desses planos deve ser uma replicação remota e agendada. O outro plano poderá ser local.
sudo ./bin/repldb --add-replica --fonte /opt/firebird/data/bd_master_mini_erp.fdb --destino /opt/firebird/data/bd_replica01_mini_erp.fdb
sudo ./bin/repldb --add-replica --fonte /opt/firebird/data/bd_master_mini_erp.fdb --destino 192.168.1.54:/opt/firebird/data/bd_replica02_mini_erp.fdb --schedule "*/3 * * * *"

# ---------------------------------------------------------

# 4 - Depois dos planos criados, listá-los (para se ter a certeza de que realmente foram criados).
sudo ./bin/repldb --list-replica
sudo crontab -l

# ---------------------------------------------------------

# 5 - Postriormente, executá-los (no caso do agendado, simular uma execução manual e agenda), listando os logs de execução, assim como se os arquivos foram criados.
sudo ./bin/repldb --run-replica --id 1
sudo ./bin/repldb --run-replica --id 2

# Localmente e no host remoto
clear && ls -lrta /opt/firebird/data
sudo ./bin/repldb --list-logs

# ---------------------------------------------------------

# 6 - Analisar o conteúdo do banco de testes (master) e, depois das réplicas (slave) - compare os conteúdos.
-- REPLICA LOCA E REMOTA
-- Verificando dados
SELECT *
FROM TBL_PRODUTOS tp 
ORDER BY tp.ID_PRODUTO ASC;

-- verificando quantidade de registros
SELECT COUNT (*) AS qtde_registros
FROM TBL_PRODUTOS tp;
    
# ---------------------------------------------------------

# 7 - Incluir novos dados no banco de testes (master).
-- Inserindo novos registros
INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('CAIXA INDUTORA HHFG-R', 'COMPONENTE', 'CINZA', 'MT');

INSERT INTO tbl_produtos (desc_produto, tipo_produto, cor_produto, un_produto)
VALUES ('ANEL VEDACAO', 'COMPONENTE', 'CINZA', 'UN');

# ---------------------------------------------------------

# 8 - Reexecutar os planos de replicação criados, e repetir os passos 5 e 6 novamente.
# ANTES - DESCONECTAR O DBeaver DOS BANCOS

sudo ./bin/repldb --run-replica --id 1
sudo ./bin/repldb --run-replica --id 2

# Localmente e no host remoto
clear && ls -lrta /opt/firebird/data
sudo ./bin/repldb --list-logs

-- REPLICA LOCA E REMOTA
-- Verificando dados
SELECT *
FROM TBL_PRODUTOS tp 
ORDER BY tp.ID_PRODUTO ASC;

-- verificando quantidade de registros
SELECT COUNT (*) AS qtde_registros
FROM TBL_PRODUTOS tp;

# ---------------------------------------------------------

# 9 - Excluir os planos de replicação e, verificar se os agendamentos, assim como os planos foram excluídos.
sudo ./bin/repldb --remove-replica --id 1
sudo ./bin/repldb --remove-replica --id 2
sudo crontab -l
sudo ./bin/repldb --list-replica
sudo ./bin/repldb --list-logs



